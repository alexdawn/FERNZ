/* ******************************************************************
 * Definition of the industry tile, its callbacks, and graphics chain
 * ******************************************************************/
        spritelayout copper_mine_spritelayout_1 {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                // fences NE
                building {
                    sprite: 1302 + LOAD_TEMP(1);
                    hide_sprite: (LOAD_TEMP(9) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(5) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences NW
                building {
                    sprite: 1301 + LOAD_TEMP(2);
                    hide_sprite: (LOAD_TEMP(10) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(6) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                    // buildings (snow aware)
                    building {
                        sprite: 2039;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: 2039;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
                // fences SE
                building {
                    sprite: 1301 + LOAD_TEMP(3);
                    hide_sprite: (LOAD_TEMP(11) == 0);
                    xoffset: 0;
                    yoffset:  16;
                    zoffset:  LOAD_TEMP(7) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences SW
                building {
                    sprite: 1302 + LOAD_TEMP(4);
                    hide_sprite: (LOAD_TEMP(12) == 0);
                    xoffset: 16;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(8) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
        }
        spritelayout copper_mine_spritelayout_2 {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                // fences NE
                building {
                    sprite: 1302 + LOAD_TEMP(1);
                    hide_sprite: (LOAD_TEMP(9) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(5) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences NW
                building {
                    sprite: 1301 + LOAD_TEMP(2);
                    hide_sprite: (LOAD_TEMP(10) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(6) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences SE
                building {
                    sprite: 1301 + LOAD_TEMP(3);
                    hide_sprite: (LOAD_TEMP(11) == 0);
                    xoffset: 0;
                    yoffset:  16;
                    zoffset:  LOAD_TEMP(7) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences SW
                building {
                    sprite: 1302 + LOAD_TEMP(4);
                    hide_sprite: (LOAD_TEMP(12) == 0);
                    xoffset: 16;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(8) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
        }
        spritelayout copper_mine_spritelayout_3_anim {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                // fences NE
                building {
                    sprite: 1302 + LOAD_TEMP(1);
                    hide_sprite: (LOAD_TEMP(9) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(5) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences NW
                building {
                    sprite: 1301 + LOAD_TEMP(2);
                    hide_sprite: (LOAD_TEMP(10) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(6) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                    // buildings (snow aware)
                    building {
                        sprite: 2028 + ((animation_frame < 33) ? (animation_frame %3) : 0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 2;
                        yoffset: 3;
                        zoffset: 0;
                        xextent: 13;
                        yextent: 12;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: 2028 + ((animation_frame < 33) ? (animation_frame %3) : 0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 2;
                        yoffset: 3;
                        zoffset: 0;
                        xextent: 13;
                        yextent: 12;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
                // fences SE
                building {
                    sprite: 1301 + LOAD_TEMP(3);
                    hide_sprite: (LOAD_TEMP(11) == 0);
                    xoffset: 0;
                    yoffset:  16;
                    zoffset:  LOAD_TEMP(7) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences SW
                building {
                    sprite: 1302 + LOAD_TEMP(4);
                    hide_sprite: (LOAD_TEMP(12) == 0);
                    xoffset: 16;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(8) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
        }
        spritelayout copper_mine_spritelayout_4 {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                // fences NE
                building {
                    sprite: 1302 + LOAD_TEMP(1);
                    hide_sprite: (LOAD_TEMP(9) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(5) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences NW
                building {
                    sprite: 1301 + LOAD_TEMP(2);
                    hide_sprite: (LOAD_TEMP(10) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(6) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                    // buildings (snow aware)
                    building {
                        sprite: 2036;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: 2036;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
                // fences SE
                building {
                    sprite: 1301 + LOAD_TEMP(3);
                    hide_sprite: (LOAD_TEMP(11) == 0);
                    xoffset: 0;
                    yoffset:  16;
                    zoffset:  LOAD_TEMP(7) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences SW
                building {
                    sprite: 1302 + LOAD_TEMP(4);
                    hide_sprite: (LOAD_TEMP(12) == 0);
                    xoffset: 16;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(8) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
        }
        spritelayout copper_mine_spritelayout_5 {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                // fences NE
                building {
                    sprite: 1302 + LOAD_TEMP(1);
                    hide_sprite: (LOAD_TEMP(9) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(5) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences NW
                building {
                    sprite: 1301 + LOAD_TEMP(2);
                    hide_sprite: (LOAD_TEMP(10) == 0);
                    xoffset:  0;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(6) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                    // buildings (snow aware)
                    building {
                        sprite: 2033;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: 2033;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
                // smoke sprites
                building {
                    sprite: 2040 + (animation_frame / 4);
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: 0;
                    yoffset: 2;
                    zoffset: 38+ animation_frame;
                    xextent: 11;
                    yextent: 16;
                    zextent: 7;
                    hide_sprite: animation_frame > 19;
                }
                // fences SE
                building {
                    sprite: 1301 + LOAD_TEMP(3);
                    hide_sprite: (LOAD_TEMP(11) == 0);
                    xoffset: 0;
                    yoffset:  16;
                    zoffset:  LOAD_TEMP(7) * 8;
                    xextent: 16;
                    yextent: 1;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
                // fences SW
                building {
                    sprite: 1302 + LOAD_TEMP(4);
                    hide_sprite: (LOAD_TEMP(12) == 0);
                    xoffset: 16;
                    yoffset:  0;
                    zoffset:  LOAD_TEMP(8) * 8;
                    xextent: 1;
                    yextent: 16;
                    zextent: 6;
                    recolour_mode: RECOLOUR_REMAP;
                    palette:       PALETTE_USE_DEFAULT;
                }
        }
        switch(FEAT_INDUSTRYTILES, SELF, copper_mine_industry_layout_1_graphics_switch, relative_pos) {
                relative_coord(0, 0): copper_mine_spritelayout_1;
                relative_coord(0, 1): copper_mine_spritelayout_1;
                relative_coord(0, 2): copper_mine_spritelayout_1;
                relative_coord(1, 0): copper_mine_spritelayout_5;
                relative_coord(1, 1): copper_mine_spritelayout_3_anim;
                relative_coord(1, 2): copper_mine_spritelayout_4;
                relative_coord(2, 0): copper_mine_spritelayout_1;
                relative_coord(2, 1): copper_mine_spritelayout_1;
                relative_coord(2, 2): copper_mine_spritelayout_2;
                relative_coord(3, 1): copper_mine_spritelayout_1;
            copper_mine_spritelayout_1; // a default is needed, but should never be reached, layout definitions are explicit
        }
    switch(FEAT_INDUSTRYTILES, PARENT, copper_mine_industry_graphics_switch_layouts, layout_num) {
            1: copper_mine_industry_layout_1_graphics_switch;
        copper_mine_industry_layout_1_graphics_switch; // default
    }
    switch(FEAT_INDUSTRYTILES, SELF, copper_mine_industry_construction_state_graphics_switch, construction_state) {
        0..2: spritelayout_default_construction_states;
        copper_mine_industry_graphics_switch_layouts; // default
    }
    switch(FEAT_INDUSTRYTILES, SELF, copper_mine_store_temp_vars,
            [STORE_TEMP(terrain_type == TILETYPE_SNOW, 13)
                    , STORE_TEMP(0,
                                 255) 
                    , STORE_TEMP(construction_state != 3 ? 1 : LOAD_TEMP(255),
                                 255)
                    , STORE_TEMP(LOAD_TEMP(13) == 0 ? 1 : LOAD_TEMP(255), 
                                 245) 
                    , STORE_TEMP(LOAD_TEMP(13) == 1 ? 1 : LOAD_TEMP(255), 
                                 255)
            ]) {
        copper_mine_industry_construction_state_graphics_switch; // default
    }
    switch(FEAT_INDUSTRYTILES, PARENT, copper_mine_industry_master_graphics_switch, STORE_TEMP(random_bits, 14)) {
        copper_mine_store_temp_vars; // default
    }
    switch (FEAT_INDUSTRYTILES, SELF, copper_mine_tile_fence_station, [
                STORE_TEMP(LOAD_TEMP(9) * (nearby_tile_class(-1,  0) != TILE_CLASS_STATION), 9),
                STORE_TEMP(LOAD_TEMP(10) * (nearby_tile_class( 0, -1) != TILE_CLASS_STATION), 10),
                STORE_TEMP(LOAD_TEMP(11) * (nearby_tile_class( 0,  1) != TILE_CLASS_STATION), 11),
                STORE_TEMP(LOAD_TEMP(12) * (nearby_tile_class( 1,  0) != TILE_CLASS_STATION), 12),
            ]) {
        copper_mine_industry_master_graphics_switch;
    }
    switch (FEAT_INDUSTRYTILES, SELF, copper_mine_tile_fence_industry, [
                STORE_TEMP(LOAD_TEMP(9) * !nearby_tile_is_same_industry(-1,  0), 9),
                STORE_TEMP(LOAD_TEMP(10) * !nearby_tile_is_same_industry( 0, -1), 10),
                STORE_TEMP(LOAD_TEMP(11) * !nearby_tile_is_same_industry( 0,  1), 11),
                STORE_TEMP(LOAD_TEMP(12) * !nearby_tile_is_same_industry( 1,  0), 12),
            ]) {
        copper_mine_tile_fence_station;
    }
    switch (FEAT_INDUSTRYTILES, SELF, copper_mine_tile_fences, [
                STORE_TEMP(0, 1),
                STORE_TEMP(0, 2),
                STORE_TEMP(0, 3),
                STORE_TEMP(0, 4),
                STORE_TEMP(1, 9),
                STORE_TEMP(1, 10),
                STORE_TEMP(1, 11),
                STORE_TEMP(1, 12),
                STORE_TEMP(0, 5),
                STORE_TEMP(0, 6),
                STORE_TEMP(0, 7),
                STORE_TEMP(0, 8),
                ]) {
        copper_mine_tile_fence_industry;
    }
    switch(FEAT_INDUSTRYTILES, SELF, copper_mine_tile_1_lc_1,
        (nearby_tile_class( 1,  1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 1,  0) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 1, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 0, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1,  0) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1,  1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 0,  1) == TILE_CLASS_INDUSTRY)) {
        1: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
    }
    switch (FEAT_INDUSTRYTILES, PARENT, copper_mine_tile_1_lc_0, (
                (((extra_callback_info2 & 0xFF00) >> 8) == IND_CREATION_FUND) ||
                (((extra_callback_info2 & 0xFF00) >> 8) == IND_CREATION_PROSPECT)
                )
            ) {
        1: return CB_RESULT_LOCATION_ALLOW;
        copper_mine_tile_1_lc_1;
    }
    switch(FEAT_INDUSTRYTILES, SELF, copper_mine_tile_1_anim_control, (extra_callback_info1 % 71)) {
            0: return 0;
            1: return 1;
            2: return 2;
            3: return 3;
            4: return 4;
            5: return 5;
            6: return 6;
            7: return 7;
            8: return 8;
            9: return 9;
            10: return 10;
            11: return 11;
            12: return 12;
            13: return 13;
            14: return 14;
            15: return 15;
            16: return 16;
            17: return 17;
            18: return 18;
            19: return 19;
            20: return 20;
            21: return 21;
            22: return 22;
            23: return 23;
            24: return 24;
            25: return 25;
            26: return 26;
            27: return 27;
            28: return 28;
            29: return 29;
            30: return 30;
            31: return 31;
            32: return 32;
            33: return 33;
            34: return 34;
            35: return 35;
            36: return 36;
            37: return 37;
            38: return 38;
            39: return 39;
            40: return 40;
            41: return 41;
            42: return 42;
            43: return 43;
            44: return 44;
            45: return 45;
            46: return 46;
            47: return 47;
            48: return 48;
            49: return 49;
            50: return 50;
            51: return 51;
            52: return 52;
            53: return 53;
            54: return 54;
            55: return 55;
            56: return 56;
            57: return 57;
            58: return 58;
            59: return 59;
            60: return 60;
            61: return 61;
            62: return 62;
            63: return 63;
            64: return 64;
            65: return 65;
            66: return 66;
            67: return 67;
            68: return 68;
            69: return 69;
            70: return 70;
        return CB_RESULT_NEXT_FRAME;
    }
    item(FEAT_INDUSTRYTILES, copper_mine_tile_1, 174) {
        property {
            substitute:         0;
            land_shape_flags:   0;
                animation_info: [ANIMATION_LOOPING, 71];
                animation_speed: 2;
            animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
        }
        graphics {
    		    tile_check: copper_mine_tile_1_lc_0;
    		    anim_control: copper_mine_tile_1_anim_control;
            copper_mine_tile_fences;
        }
    }
        if (economy==0) {
        }
        if (economy==1) {
        }
        if (economy==4) {
                item(FEAT_INDUSTRYTILES, copper_mine_tile_1, 174) {
                    property {
                        accepted_cargos:  [[cargotype("ENSP"), 8]];
                    }
                }
        }
        if (economy==5) {
        }
        if (economy==3) {
                item(FEAT_INDUSTRYTILES, copper_mine_tile_1, 174) {
                    property {
                        accepted_cargos:  [[cargotype("ENSP"), 8]];
                    }
                }
        }
        if (economy==2) {
        }
        if (economy==6) {
        }
/* *************************************************
 * Definition of the industry
 * *************************************************/
    tilelayout copper_mine_industry_layout_1_tilelayout {
            0, 0: copper_mine_tile_1;
            0, 1: copper_mine_tile_1;
            0, 2: copper_mine_tile_1;
            1, 0: copper_mine_tile_1;
            1, 1: copper_mine_tile_1;
            1, 2: copper_mine_tile_1;
            2, 0: copper_mine_tile_1;
            2, 1: copper_mine_tile_1;
            2, 2: copper_mine_tile_1;
            3, 1: copper_mine_tile_1;
    }
switch(FEAT_INDUSTRIES, SELF, copper_mine_extra_text, [
	STORE_TEMP((primary_level1_requirement * 1) |
	(primary_level2_requirement * 1) << 16, 0x100),
	LOAD_PERM(3)
]) {
	primary_level2_bonus: return string(STR_PRIMARY_PRODUCTION_4X);
	primary_level1_bonus: return string(STR_PRIMARY_PRODUCTION_2X);
	return string(STR_PRIMARY_PRODUCTION_1X);
}
switch (FEAT_INDUSTRIES, SELF, copper_mine_cargo_subtype_display, 1) {
    return 0x3800 + string(STR_EMPTY);
}
/* Primary production which is boosted by supplies */
    produce(copper_mine_production, 9999, 9999, 9999, 0, 0, 0);
    switch(FEAT_INDUSTRIES, SELF, copper_mine_produce, STORE_PERM(waiting_cargo_1 + waiting_cargo_2 + waiting_cargo_3 + LOAD_PERM(0), 0)) {
        copper_mine_production;
    }
    produce(copper_mine_production_256, 0, 0, 0, LOAD_TEMP(9) * production_rate_1 / 100, LOAD_TEMP(9) * production_rate_2 / 100, 0);
    switch(FEAT_INDUSTRIES, SELF, copper_mine_produce_256_ticks,
            [STORE_TEMP(
                LOAD_PERM(0) +
                LOAD_PERM(1) +
                LOAD_PERM(2),
            8),
            STORE_TEMP((LOAD_TEMP(8) >= (1 * primary_level2_requirement)) ? primary_level2_bonus :
                       (LOAD_TEMP(8) >= (1 * primary_level1_requirement)) ? primary_level1_bonus : 0, 9),
            STORE_PERM(LOAD_TEMP(9), 3)
            ]) {
        copper_mine_production_256;
    }
/* =================================== */
/* Production change evaluated monthly */
/* =================================== */
    switch(FEAT_INDUSTRIES, SELF, copper_mine_monthly_update, [
        STORE_PERM(LOAD_PERM(1), 2),
        STORE_PERM(LOAD_PERM(0), 1),
        STORE_PERM(0, 0)
    ]) {
        return CB_RESULT_IND_PROD_NO_CHANGE;
    }
switch(FEAT_INDUSTRIES, SELF, copper_mine_check_availability_param, restrict_open_during_gameplay) {
	1..255: return CB_RESULT_IND_NO_CONSTRUCTION;         // disallow when restrictions in place
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;       // we may build
}
switch (FEAT_INDUSTRIES, SELF, copper_mine_check_map_gen, extra_callback_info2 == IND_CREATION_GENERATION) {
	1: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
	copper_mine_check_availability_param;
}
switch (FEAT_INDUSTRIES, SELF, copper_mine_available_game_mode, game_mode == GAMEMODE_GAME) {
	1: copper_mine_check_map_gen;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_0, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_1, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_4, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_5, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_3, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_2, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1800 */
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability_6, current_date) {
        date(1800,1,1) .. date(5000000,12,31): copper_mine_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
switch (FEAT_INDUSTRIES, SELF, copper_mine_check_availability, economy) {
        0: copper_mine_check_availability_0;
        1: copper_mine_check_availability_1;
        4: copper_mine_check_availability_4;
        5: copper_mine_check_availability_5;
        3: copper_mine_check_availability_3;
        2: copper_mine_check_availability_2;
        6: copper_mine_check_availability_6;
}
    switch (FEAT_INDUSTRIES, SELF, copper_mine_min_distance_67, industry_distance(67)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
    }
    switch (FEAT_INDUSTRIES, SELF, copper_mine_min_distance_64, industry_distance(64)) {
        0 .. 20: return CB_RESULT_LOCATION_DISALLOW;
        copper_mine_min_distance_67;
    }
    switch (FEAT_INDUSTRIES, SELF, copper_mine_cluster_copper_mine,
                industry_count(copper_mine) >= (3 * industry_clusters) &&
                industry_distance(copper_mine) > 60
            ) {
        1: return CB_RESULT_LOCATION_DISALLOW;
        copper_mine_min_distance_64;
    }
    switch (FEAT_INDUSTRIES, SELF, copper_mine_check_location, (
                (extra_callback_info2 == IND_CREATION_FUND) ||
                (extra_callback_info2 == IND_CREATION_PROSPECT)
                )
            ) {
        1: return CB_RESULT_LOCATION_ALLOW;
        copper_mine_cluster_copper_mine;
    }
        if (economy==4) {
            item(FEAT_INDUSTRIES, copper_mine, 64) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 10;
                    life_type: IND_LIFE_TYPE_EXTRACTIVE;
                    min_cargo_distr: 5;
                    spec_flags: 0;
                    layouts: [copper_mine_industry_layout_1_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: TTD_STR_INDUSTRY_NAME_COPPER_ORE_MINE;
                    prod_multiplier: [20, 0];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 7;
                    prob_in_game: 7;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 238;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("ENSP")];
                    prod_cargo_types: [cargotype("CORE")];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_COPPER_LODE));
                }
            }
        }
        if (economy==3) {
            item(FEAT_INDUSTRIES, copper_mine, 64) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 10;
                    life_type: IND_LIFE_TYPE_EXTRACTIVE;
                    min_cargo_distr: 5;
                    spec_flags: 0;
                    layouts: [copper_mine_industry_layout_1_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: TTD_STR_INDUSTRY_NAME_COPPER_ORE_MINE;
                    prod_multiplier: [20, 0];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 7;
                    prob_in_game: 7;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 238;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("ENSP")];
                    prod_cargo_types: [cargotype("CORE")];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_COPPER_LODE));
                }
            }
        }
        if (economy==4) {
            item(FEAT_INDUSTRIES, copper_mine, 64) {
                graphics {
                    construction_probability: copper_mine_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    produce_cargo_arrival:    copper_mine_produce;
                    produce_256_ticks:        copper_mine_produce_256_ticks;
                    monthly_prod_change:      copper_mine_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           copper_mine_check_location;
                    extra_text_fund:          return string(STR_FUND_AVAILABLE_FROM, 1800);
                    extra_text_industry:      copper_mine_extra_text;
                    cargo_subtype_display:    copper_mine_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }
        if (economy==3) {
            item(FEAT_INDUSTRIES, copper_mine, 64) {
                graphics {
                    construction_probability: copper_mine_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    produce_cargo_arrival:    copper_mine_produce;
                    produce_256_ticks:        copper_mine_produce_256_ticks;
                    monthly_prod_change:      copper_mine_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           copper_mine_check_location;
                    extra_text_fund:          return string(STR_FUND_AVAILABLE_FROM, 1800);
                    extra_text_industry:      copper_mine_extra_text;
                    cargo_subtype_display:    copper_mine_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }