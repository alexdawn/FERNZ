<!--!
    Template which checks availability of an industry for building
     - Allow in intro_year ... expiry_year
     - Always allow in SE
     - Never allow when NewGRF parameter forbids building
     - Always allow otherwise
 -->

<!--! Check for restriction via parameter -->
switch(FEAT_INDUSTRIES, SELF, ${industry.id}_check_availability_param, restrict_open_during_gameplay) {
	1..255: return CB_RESULT_IND_NO_CONSTRUCTION;         // disallow when restrictions in place
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;       // we may build
}

<!--! Allow always during map gen -->
switch (FEAT_INDUSTRIES, SELF, ${industry.id}_check_map_gen, extra_callback_info2 == IND_CREATION_GENERATION) {
	1: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
	${industry.id}_check_availability_param;
}
<!--! Allow always in the scenario editor -->
switch (FEAT_INDUSTRIES, SELF, ${industry.id}_available_game_mode, game_mode == GAMEMODE_GAME) {
	1: ${industry.id}_check_map_gen;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}

<!--! Allow only within the availability years (variable by economy) -->
<tal:economy_dates repeat="economy economies">
    /* ${industry.get_intro_year(economy)} */
    switch (FEAT_INDUSTRIES, SELF, ${industry.id}_check_availability_${economy.numeric_id}, current_date) {
        date(${industry.get_intro_year(economy)},1,1) .. date(${industry.get_expiry_year(economy)},12,31): ${industry.id}_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
</tal:economy_dates>

switch (FEAT_INDUSTRIES, SELF, ${industry.id}_check_availability, economy) {
    <tal:economy_switches repeat="economy economies">
        ${economy.numeric_id}: ${industry.id}_check_availability_${economy.numeric_id};
    </tal:economy_switches>
}


