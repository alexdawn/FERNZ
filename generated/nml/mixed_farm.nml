/* ******************************************************************
 * Definition of the industry tile, its callbacks, and graphics chain
 * ******************************************************************/
            spriteset(mixed_farm_spriteset_0_0, "src/graphics/industries/groundtiles.png") {
                    tmpl_ground_tile(360, 10)
            }
            spriteset(mixed_farm_spriteset_0_0_snow, "src/graphics/industries/groundtiles.png") {
                    tmpl_ground_tile(220, 10)
            }
            spriteset(mixed_farm_spriteset_1_0, "src/graphics/industries/groundtiles.png") {
                    tmpl_ground_tile(360, 10)
            }
            spriteset(mixed_farm_spriteset_1_0_snow, "src/graphics/industries/groundtiles.png") {
                    tmpl_ground_tile(220, 10)
            }
            spriteset(mixed_farm_spriteset_2_0) {
                        [10, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_2_0_snow) {
                            [10, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_3_0) {
                        [10, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_3_0_snow) {
                            [10, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_4_0) {
                        [80, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_4_0_snow) {
                            [80, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_5_0) {
                        [80, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_5_0_snow) {
                            [80, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_6_0) {
                        [150, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_6_0_snow) {
                            [150, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_7_0) {
                        [150, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_7_0_snow) {
                            [150, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_8_0) {
                        [220, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_8_0_snow) {
                            [220, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_9_0) {
                        [220, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_9_0_snow) {
                            [220, 70, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_10_0) {
                        [290, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_10_0_snow) {
                            [290, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_11_0) {
                        [360, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_11_0_snow) {
                            [360, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_12_0) {
                        [430, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_12_0_snow) {
                            [430, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
            spriteset(mixed_farm_spriteset_13_0) {
                        [500, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1.png"]
            }
            spriteset(mixed_farm_spriteset_13_0_snow) {
                            [500, 10, 64, 52, -31, -21, ANIM | NOCROP, "src/graphics/industries/mixed_farm_1_snow.png"]
            }
        spritelayout mixed_farm_spritelayout_1 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_3_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_3_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_2_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_2_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_2 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_5_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_5_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_4_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_4_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_3 {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: GROUNDSPRITE_CLEARED;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_7_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: GROUNDSPRITE_CLEARED;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_7_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_6_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_6_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_4 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_9_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_9_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_8_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_8_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_5 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_10_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_10_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_6 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_11_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_11_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_7 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_12_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_12_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        spritelayout mixed_farm_spritelayout_8 {
                ground {
                    sprite: GROUNDSPRITE_NORMAL ;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || (climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT);
                }
                childsprite {
                    sprite: GROUNDSPRITE_DESERT_1_2;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_TROPIC) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT)) || ((climate == CLIMATE_TROPIC) && (nearby_tile_terrain_type(0, 0) == TILETYPE_NORMAL) && ((nearby_tile_terrain_type( 1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type(-1, 0) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0, 1) != TILETYPE_DESERT) && (nearby_tile_terrain_type( 0,-1) != TILETYPE_DESERT) ) );
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_4_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && (nearby_tile_height(0, 0) < (snowline_height + 2));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_3_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 2)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_2_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height + 0)) || (nearby_tile_height(0, 0) >= (snowline_height + 1)));
                }
                childsprite {
                    sprite: GROUNDSPRITE_SNOW_1_4;
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: 1;
                    hide_sprite: (climate != CLIMATE_ARCTIC) || (climate == CLIMATE_ARCTIC) && ((nearby_tile_height(0, 0) < (snowline_height - 1)) || (nearby_tile_height(0, 0) >= (snowline_height + 0)));
                }
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: mixed_farm_spriteset_0_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: mixed_farm_spriteset_1_0_snow(0);
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: mixed_farm_spriteset_13_0(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(255));
                    }
                    building {
                        sprite: mixed_farm_spriteset_13_0_snow(0);
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 32;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(245));
                    }
        }
        switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_industry_layout_1_graphics_switch, relative_pos) {
                relative_coord(0, 2): mixed_farm_spritelayout_8;
                relative_coord(0, 3): mixed_farm_spritelayout_3;
                relative_coord(1, 0): mixed_farm_spritelayout_2;
                relative_coord(2, 0): mixed_farm_spritelayout_1;
                relative_coord(2, 2): mixed_farm_spritelayout_5;
                relative_coord(2, 3): mixed_farm_spritelayout_7;
                relative_coord(3, 2): mixed_farm_spritelayout_6;
                relative_coord(3, 3): mixed_farm_spritelayout_4;
            mixed_farm_spritelayout_8; // a default is needed, but should never be reached, layout definitions are explicit
        }
        switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_industry_layout_2_graphics_switch, relative_pos) {
                relative_coord(0, 0): mixed_farm_spritelayout_4;
                relative_coord(0, 2): mixed_farm_spritelayout_7;
                relative_coord(0, 3): mixed_farm_spritelayout_6;
                relative_coord(1, 0): mixed_farm_spritelayout_5;
                relative_coord(1, 3): mixed_farm_spritelayout_1;
                relative_coord(2, 0): mixed_farm_spritelayout_8;
                relative_coord(2, 1): mixed_farm_spritelayout_3;
                relative_coord(2, 2): mixed_farm_spritelayout_2;
            mixed_farm_spritelayout_4; // a default is needed, but should never be reached, layout definitions are explicit
        }
        switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_industry_layout_3_graphics_switch, relative_pos) {
                relative_coord(0, 0): mixed_farm_spritelayout_8;
                relative_coord(0, 1): mixed_farm_spritelayout_1;
                relative_coord(0, 2): mixed_farm_spritelayout_5;
                relative_coord(1, 0): mixed_farm_spritelayout_2;
                relative_coord(1, 2): mixed_farm_spritelayout_3;
                relative_coord(2, 0): mixed_farm_spritelayout_7;
                relative_coord(3, 0): mixed_farm_spritelayout_4;
                relative_coord(3, 2): mixed_farm_spritelayout_6;
            mixed_farm_spritelayout_8; // a default is needed, but should never be reached, layout definitions are explicit
        }
    switch(FEAT_INDUSTRYTILES, PARENT, mixed_farm_industry_graphics_switch_layouts, layout_num) {
            1: mixed_farm_industry_layout_1_graphics_switch;
            2: mixed_farm_industry_layout_2_graphics_switch;
            3: mixed_farm_industry_layout_3_graphics_switch;
        mixed_farm_industry_layout_1_graphics_switch; // default
    }
    switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_industry_construction_state_graphics_switch, construction_state) {
        0..2: spritelayout_default_construction_states;
        mixed_farm_industry_graphics_switch_layouts; // default
    }
    switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_store_temp_vars,
            [STORE_TEMP(terrain_type == TILETYPE_SNOW, 13)
                    , STORE_TEMP(0,
                                 255) 
                    , STORE_TEMP(construction_state != 3 ? 1 : LOAD_TEMP(255),
                                 255)
                    , STORE_TEMP(LOAD_TEMP(13) == 0 ? 1 : LOAD_TEMP(255), 
                                 245) 
                    , STORE_TEMP(LOAD_TEMP(13) == 1 ? 1 : LOAD_TEMP(255), 
                                 255)
            ]) {
        mixed_farm_industry_construction_state_graphics_switch; // default
    }
    switch(FEAT_INDUSTRYTILES, PARENT, mixed_farm_industry_master_graphics_switch, STORE_TEMP(random_bits, 14)) {
        mixed_farm_store_temp_vars; // default
    }
    switch (FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_fence_station, [
                STORE_TEMP(LOAD_TEMP(9) * (nearby_tile_class(-1,  0) != TILE_CLASS_STATION), 9),
                STORE_TEMP(LOAD_TEMP(10) * (nearby_tile_class( 0, -1) != TILE_CLASS_STATION), 10),
                STORE_TEMP(LOAD_TEMP(11) * (nearby_tile_class( 0,  1) != TILE_CLASS_STATION), 11),
                STORE_TEMP(LOAD_TEMP(12) * (nearby_tile_class( 1,  0) != TILE_CLASS_STATION), 12),
            ]) {
        mixed_farm_industry_master_graphics_switch;
    }
    switch (FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_fence_industry, [
                STORE_TEMP(LOAD_TEMP(9) * !nearby_tile_is_same_industry(-1,  0), 9),
                STORE_TEMP(LOAD_TEMP(10) * !nearby_tile_is_same_industry( 0, -1), 10),
                STORE_TEMP(LOAD_TEMP(11) * !nearby_tile_is_same_industry( 0,  1), 11),
                STORE_TEMP(LOAD_TEMP(12) * !nearby_tile_is_same_industry( 1,  0), 12),
            ]) {
        mixed_farm_tile_fence_station;
    }
    switch (FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_fences, [
                STORE_TEMP(0, 1),
                STORE_TEMP(0, 2),
                STORE_TEMP(0, 3),
                STORE_TEMP(0, 4),
                STORE_TEMP(1, 9),
                STORE_TEMP(1, 10),
                STORE_TEMP(1, 11),
                STORE_TEMP(1, 12),
                STORE_TEMP(0, 5),
                STORE_TEMP(0, 6),
                STORE_TEMP(0, 7),
                STORE_TEMP(0, 8),
                ]) {
        mixed_farm_tile_fence_industry;
    }
    switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_1_lc_5,
        (nearby_tile_class( 1,  1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 1,  0) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 1, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 0, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1,  0) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1,  1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 0,  1) == TILE_CLASS_INDUSTRY)) {
        1: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
    }
    switch (FEAT_INDUSTRYTILES, PARENT, mixed_farm_tile_1_lc_4, (
                (((extra_callback_info2 & 0xFF00) >> 8) == IND_CREATION_FUND) ||
                (((extra_callback_info2 & 0xFF00) >> 8) == IND_CREATION_PROSPECT)
                )
            ) {
        1: return CB_RESULT_LOCATION_ALLOW;
        mixed_farm_tile_1_lc_5;
    }
    switch (FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_1_lc_3, nearby_tile_slope(0,0) & bitmask(IS_STEEP_SLOPE)) {
        0: mixed_farm_tile_1_lc_4;
        return string(STR_ERR_LOCATION_NOT_ON_STEEP_SLOPE);
    }
    switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_1_lc_2, UCMP(nearby_tile_height(0, 0) - 0, snowline_height - 0)) {
        0..1: mixed_farm_tile_1_lc_3;
        return string(STR_ERR_LOCATION_NOT_ABOVE_SNOWLINE);
    }
    switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_1_lc_1,
                (nearby_tile_terrain_type( 1, -1) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type( 1,  0) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type( 1,  1) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type( 0, -1) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type( 0,  0) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type( 0,  1) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type(-1, -1) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type(-1,  0) == TILETYPE_DESERT) &&
                (nearby_tile_terrain_type(-1,  1) == TILETYPE_DESERT)
            ) {
        1: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_tile_1_lc_2;
    }
    switch(FEAT_INDUSTRYTILES, SELF, mixed_farm_tile_1_lc_0, nearby_tile_is_water(0, 0)) {
        1: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_tile_1_lc_1;
    }
    item(FEAT_INDUSTRYTILES, mixed_farm_tile_1, 190) {
        property {
            substitute:         0;
            land_shape_flags:   0;
            animation_triggers: bitmask();
        }
        graphics {
    		    tile_check: mixed_farm_tile_1_lc_0;
            mixed_farm_tile_fences;
        }
    }
        if (economy==0) {
        }
        if (economy==1) {
        }
        if (economy==4) {
        }
        if (economy==5) {
                item(FEAT_INDUSTRYTILES, mixed_farm_tile_1, 190) {
                    property {
                        accepted_cargos:  [[cargotype("FMSP"), 8]];
                    }
                }
        }
        if (economy==3) {
                item(FEAT_INDUSTRYTILES, mixed_farm_tile_1, 190) {
                    property {
                        accepted_cargos:  [[cargotype("FMSP"), 8]];
                    }
                }
        }
        if (economy==2) {
                item(FEAT_INDUSTRYTILES, mixed_farm_tile_1, 190) {
                    property {
                        accepted_cargos:  [[cargotype("FMSP"), 8]];
                    }
                }
        }
        if (economy==6) {
                item(FEAT_INDUSTRYTILES, mixed_farm_tile_1, 190) {
                    property {
                        accepted_cargos:  [[cargotype("FMSP"), 8]];
                    }
                }
        }
/* *************************************************
 * Definition of the industry
 * *************************************************/
    tilelayout mixed_farm_industry_layout_1_tilelayout {
            0, 2: mixed_farm_tile_1;
            0, 3: mixed_farm_tile_1;
            1, 0: mixed_farm_tile_1;
            2, 0: mixed_farm_tile_1;
            2, 2: mixed_farm_tile_1;
            2, 3: mixed_farm_tile_1;
            3, 2: mixed_farm_tile_1;
            3, 3: mixed_farm_tile_1;
    }
    tilelayout mixed_farm_industry_layout_2_tilelayout {
            0, 0: mixed_farm_tile_1;
            0, 2: mixed_farm_tile_1;
            0, 3: mixed_farm_tile_1;
            1, 0: mixed_farm_tile_1;
            1, 3: mixed_farm_tile_1;
            2, 0: mixed_farm_tile_1;
            2, 1: mixed_farm_tile_1;
            2, 2: mixed_farm_tile_1;
    }
    tilelayout mixed_farm_industry_layout_3_tilelayout {
            0, 0: mixed_farm_tile_1;
            0, 1: mixed_farm_tile_1;
            0, 2: mixed_farm_tile_1;
            1, 0: mixed_farm_tile_1;
            1, 2: mixed_farm_tile_1;
            2, 0: mixed_farm_tile_1;
            3, 0: mixed_farm_tile_1;
            3, 2: mixed_farm_tile_1;
    }
switch(FEAT_INDUSTRIES, SELF, mixed_farm_extra_text, [
	STORE_TEMP((primary_level1_requirement * 1) |
	(primary_level2_requirement * 1) << 16, 0x100),
	LOAD_PERM(3)
]) {
	primary_level2_bonus: return string(STR_PRIMARY_PRODUCTION_4X);
	primary_level1_bonus: return string(STR_PRIMARY_PRODUCTION_2X);
	return string(STR_PRIMARY_PRODUCTION_1X);
}
switch (FEAT_INDUSTRIES, SELF, mixed_farm_cargo_subtype_display, 1) {
    return 0x3800 + string(STR_EMPTY);
}
/* Primary production which is boosted by supplies */
    produce(mixed_farm_production, 9999, 9999, 9999, 0, 0, 0);
    switch(FEAT_INDUSTRIES, SELF, mixed_farm_produce, STORE_PERM(waiting_cargo_1 + waiting_cargo_2 + waiting_cargo_3 + LOAD_PERM(0), 0)) {
        mixed_farm_production;
    }
    produce(mixed_farm_production_256, 0, 0, 0, LOAD_TEMP(9) * production_rate_1 / 100, LOAD_TEMP(9) * production_rate_2 / 100, 0);
    switch(FEAT_INDUSTRIES, SELF, mixed_farm_produce_256_ticks,
            [STORE_TEMP(
                LOAD_PERM(0) +
                LOAD_PERM(1) +
                LOAD_PERM(2),
            8),
            STORE_TEMP((LOAD_TEMP(8) >= (1 * primary_level2_requirement)) ? primary_level2_bonus :
                       (LOAD_TEMP(8) >= (1 * primary_level1_requirement)) ? primary_level1_bonus : 0, 9),
            STORE_PERM(LOAD_TEMP(9), 3)
            ]) {
        mixed_farm_production_256;
    }
/* =================================== */
/* Production change evaluated monthly */
/* =================================== */
    switch(FEAT_INDUSTRIES, SELF, mixed_farm_monthly_update, [
        STORE_PERM(LOAD_PERM(1), 2),
        STORE_PERM(LOAD_PERM(0), 1),
        STORE_PERM(0, 0)
    ]) {
        return CB_RESULT_IND_PROD_NO_CHANGE;
    }
switch(FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_param, restrict_open_during_gameplay) {
	1..255: return CB_RESULT_IND_NO_CONSTRUCTION;         // disallow when restrictions in place
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;       // we may build
}
switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_map_gen, extra_callback_info2 == IND_CREATION_GENERATION) {
	1: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
	mixed_farm_check_availability_param;
}
switch (FEAT_INDUSTRIES, SELF, mixed_farm_available_game_mode, game_mode == GAMEMODE_GAME) {
	1: mixed_farm_check_map_gen;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_0, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_1, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_4, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_5, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_3, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_2, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 0 */
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability_6, current_date) {
        date(0,1,1) .. date(5000000,12,31): mixed_farm_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_availability, economy) {
        0: mixed_farm_check_availability_0;
        1: mixed_farm_check_availability_1;
        4: mixed_farm_check_availability_4;
        5: mixed_farm_check_availability_5;
        3: mixed_farm_check_availability_3;
        2: mixed_farm_check_availability_2;
        6: mixed_farm_check_availability_6;
}
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_59, industry_distance(59)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_42, industry_distance(42)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_59;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_34, industry_distance(34)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_42;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_37, industry_distance(37)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_34;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_60, industry_distance(60)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_37;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_39, industry_distance(39)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_60;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_82, industry_distance(82)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_39;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_18, industry_distance(18)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_82;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_58, industry_distance(58)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_18;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_35, industry_distance(35)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_58;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_61, industry_distance(61)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_35;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_51, industry_distance(51)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_61;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_52, industry_distance(52)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_51;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_min_distance_29, industry_distance(29)) {
        0 .. 56: return CB_RESULT_LOCATION_DISALLOW;
        mixed_farm_min_distance_52;
    }
    switch (FEAT_INDUSTRIES, SELF, mixed_farm_check_location, (
                (extra_callback_info2 == IND_CREATION_FUND) ||
                (extra_callback_info2 == IND_CREATION_PROSPECT)
                )
            ) {
        1: return CB_RESULT_LOCATION_ALLOW;
        mixed_farm_min_distance_29;
    }
        if (economy==5) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 85;
                    life_type: IND_LIFE_TYPE_ORGANIC;
                    min_cargo_distr: 5;
                    spec_flags: bitmask(IND_FLAG_PLANT_FIELDS_PERIODICALLY, IND_FLAG_PLANT_FIELDS_WHEN_BUILT);
                    layouts: [mixed_farm_industry_layout_1_tilelayout,mixed_farm_industry_layout_2_tilelayout,mixed_farm_industry_layout_3_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: string(STR_IND_BASICFARM);
                    prod_multiplier: [13, 14];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 11;
                    prob_in_game: 3;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 49;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("FMSP")];
                    prod_cargo_types: [cargotype("FOOD")];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_BARNS));
                }
            }
        }
        if (economy==3) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 85;
                    life_type: IND_LIFE_TYPE_ORGANIC;
                    min_cargo_distr: 5;
                    spec_flags: bitmask(IND_FLAG_PLANT_FIELDS_PERIODICALLY, IND_FLAG_PLANT_FIELDS_WHEN_BUILT);
                    layouts: [mixed_farm_industry_layout_1_tilelayout,mixed_farm_industry_layout_2_tilelayout,mixed_farm_industry_layout_3_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: string(STR_IND_MIXEDFARM);
                    prod_multiplier: [14, 13];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 14;
                    prob_in_game: 3;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 49;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("FMSP")];
                    prod_cargo_types: [cargotype("MAIZ"),cargotype("LVST")];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_BARNS));
                }
            }
        }
        if (economy==2) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 85;
                    life_type: IND_LIFE_TYPE_ORGANIC;
                    min_cargo_distr: 5;
                    spec_flags: bitmask(IND_FLAG_PLANT_FIELDS_PERIODICALLY, IND_FLAG_PLANT_FIELDS_WHEN_BUILT);
                    layouts: [mixed_farm_industry_layout_1_tilelayout,mixed_farm_industry_layout_2_tilelayout,mixed_farm_industry_layout_3_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: string(STR_IND_MIXEDFARM);
                    prod_multiplier: [13, 14];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 11;
                    prob_in_game: 3;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 49;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("FMSP")];
                    prod_cargo_types: [cargotype("LVST"),cargotype("FICR")];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_BARNS));
                }
            }
        }
        if (economy==6) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 85;
                    life_type: IND_LIFE_TYPE_ORGANIC;
                    min_cargo_distr: 5;
                    spec_flags: bitmask(IND_FLAG_PLANT_FIELDS_PERIODICALLY, IND_FLAG_PLANT_FIELDS_WHEN_BUILT);
                    layouts: [mixed_farm_industry_layout_1_tilelayout,mixed_farm_industry_layout_2_tilelayout,mixed_farm_industry_layout_3_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: string(STR_IND_MIXEDFARM);
                    prod_multiplier: [13, 14];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 11;
                    prob_in_game: 3;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 49;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("FMSP")];
                    prod_cargo_types: [cargotype("LVST"),cargotype("FICR")];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_BARNS));
                }
            }
        }
        if (economy==5) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                graphics {
                    construction_probability: mixed_farm_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    produce_cargo_arrival:    mixed_farm_produce;
                    produce_256_ticks:        mixed_farm_produce_256_ticks;
                    monthly_prod_change:      mixed_farm_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           mixed_farm_check_location;
                    extra_text_fund:          return string(STR_FUND_MIXED_FARM);
                    extra_text_industry:      mixed_farm_extra_text;
                    cargo_subtype_display:    mixed_farm_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }
        if (economy==3) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                graphics {
                    construction_probability: mixed_farm_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    produce_cargo_arrival:    mixed_farm_produce;
                    produce_256_ticks:        mixed_farm_produce_256_ticks;
                    monthly_prod_change:      mixed_farm_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           mixed_farm_check_location;
                    extra_text_fund:          return string(STR_FUND_MIXED_FARM);
                    extra_text_industry:      mixed_farm_extra_text;
                    cargo_subtype_display:    mixed_farm_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }
        if (economy==2) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                graphics {
                    construction_probability: mixed_farm_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    produce_cargo_arrival:    mixed_farm_produce;
                    produce_256_ticks:        mixed_farm_produce_256_ticks;
                    monthly_prod_change:      mixed_farm_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           mixed_farm_check_location;
                    extra_text_fund:          return string(STR_FUND_MIXED_FARM);
                    extra_text_industry:      mixed_farm_extra_text;
                    cargo_subtype_display:    mixed_farm_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }
        if (economy==6) {
            item(FEAT_INDUSTRIES, mixed_farm, 29) {
                graphics {
                    construction_probability: mixed_farm_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    produce_cargo_arrival:    mixed_farm_produce;
                    produce_256_ticks:        mixed_farm_produce_256_ticks;
                    monthly_prod_change:      mixed_farm_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           mixed_farm_check_location;
                    extra_text_fund:          return string(STR_FUND_MIXED_FARM);
                    extra_text_industry:      mixed_farm_extra_text;
                    cargo_subtype_display:    mixed_farm_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }